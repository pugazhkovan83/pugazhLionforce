[{"C:\\Users\\kavi\\react_test_survey\\src\\index.js":"1","C:\\Users\\kavi\\react_test_survey\\src\\page.jsx":"2","C:\\Users\\kavi\\react_test_survey\\src\\survey.jsx":"3","C:\\Users\\kavi\\react_test_survey\\src\\addNew.jsx":"4","C:\\Users\\kavi\\react_test_survey\\src\\store.js":"5","C:\\Users\\kavi\\react_test_survey\\src\\sideBar.jsx":"6","C:\\Users\\kavi\\react_test_survey\\src\\rightSideBar.jsx":"7","C:\\Users\\kavi\\react_test_survey\\src\\display.jsx":"8","C:\\Users\\kavi\\react_test_survey\\src\\topbar.jsx":"9"},{"size":538,"mtime":1611202369902,"results":"10","hashOfConfig":"11"},{"size":1165,"mtime":1611202692007,"results":"12","hashOfConfig":"11"},{"size":4898,"mtime":1611202801584,"results":"13","hashOfConfig":"11"},{"size":2660,"mtime":1611202369796,"results":"14","hashOfConfig":"11"},{"size":907,"mtime":1611164303125,"results":"15","hashOfConfig":"11"},{"size":179,"mtime":1611202369744,"results":"16","hashOfConfig":"11"},{"size":1169,"mtime":1611032253892,"results":"17","hashOfConfig":"11"},{"size":2644,"mtime":1611202369744,"results":"18","hashOfConfig":"11"},{"size":245,"mtime":1611178545245,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ci6zh8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\Users\\kavi\\react_test_survey\\src\\index.js",[],["44","45"],"C:\\Users\\kavi\\react_test_survey\\src\\page.jsx",[],"C:\\Users\\kavi\\react_test_survey\\src\\survey.jsx",["46","47"],"C:\\Users\\kavi\\react_test_survey\\src\\addNew.jsx",["48"],"import React, { Component} from 'react';\r\nimport {add_data} from \"./store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet result,ele;\r\n\r\nclass AddNew extends Component {\r\n    close = () => { document.getElementById(\"myModal\").style.display = \"none\"; };\r\n\r\n    addData = () => {\r\n        this.props.addData();\r\n        this.close();\r\n        \r\n    }\r\n\r\n    render() { \r\n        return ( \r\n\r\n            <div id=\"myModal\" >\r\n                <span>Add New Survey</span><span class=\"close\" onClick={this.close} >X</span>\r\n                <hr></hr>\r\n                \r\n                    <label for=\"title\">Title</label><br/>\r\n                    <input type=\"text\" id=\"title\" className=\"form_item\" /><br /><br />\r\n\r\n                    <label for=\"category\">Category</label><br/>\r\n                    <select className=\"form_item\" id=\"category\">\r\n                        <option value=\"development\">Development</option>\r\n                        <option value=\"workplace\">Work Place</option>\r\n                        <option value=\"hardware\">Hardware</option>\r\n                    </select><br/><br/>\r\n\r\n                    <label for=\"label\">Label</label><br/>\r\n                    <select className=\"form_item\" id=\"label\">\r\n                        <option value=\"EDUCATION\">Education</option>\r\n                        <option value=\"NEWFRAMEWORK\">New Framework</option>\r\n                        <option value=\"PERSONAL\">Personal</option>\r\n                    </select><br/><br/>\r\n\r\n                    <p>Status</p>\r\n                    \r\n                    <input type=\"radio\" name=\"statusName\" value=\"completed\" id=\"status\" ></input>&nbsp;Completed<br/>\r\n                    <input type=\"radio\" name=\"statusName\" value=\"active\" id=\"status\"></input>&nbsp;Active<br/><br/>\r\n\r\n                    <button className=\"cancel_button\" >Cancel</button>&nbsp;&nbsp;&nbsp;\r\n                    <button onClick = {this.addData} className=\"submit_button\" >Submit</button>\r\n            </div>\r\n\r\n         );\r\n    }\r\n}\r\n\r\nconst mapDispatchTOprops = (dispatch) =>{\r\n   \r\n    return {\r\n        addData : () => { \r\n            ele = document.getElementsByName('statusName'); \r\n            if(ele[1].checked) \r\n                result= \"active\" \r\n            else\r\n                result= \"completed\" \r\n            dispatch( {\r\n            type: add_data,\r\n            title : document.getElementById(\"title\").value, \r\n            category : document.getElementById(\"category\").value, \r\n            label : document.getElementById(\"label\").value, \r\n            status : result\r\n        \r\n        } ) }\r\n\r\n    }\r\n  }\r\n \r\nexport default connect(null,mapDispatchTOprops)(AddNew);\r\n","C:\\Users\\kavi\\react_test_survey\\src\\store.js",["49"],"import * as redux from \"redux\";\r\nimport { reducer as formRedecer } from \"redux-form\";\r\n\r\n//action\r\nexport const add_data = \"add/data\";\r\nexport const delete_data = \"delete/data\";\r\nexport const delete_all_data = \"delete/all/data\";\r\n\r\nlet count = 0;\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case add_data: {\r\n      let data = [\r\n        ...state,\r\n        {\r\n          slno: count++,\r\n          title: action.title,\r\n          category: action.category,\r\n          label: action.label,\r\n          status: action.status,\r\n        },\r\n      ];\r\n      return data;\r\n    }\r\n    case delete_data: {\r\n      const data = [...state];\r\n      data.splice(action.slno, 1);\r\n      return data;\r\n    }\r\n    case delete_all_data: {\r\n      return (state = []);\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst store = redux.createStore(reducer);\r\n\r\nexport default store;\r\n","C:\\Users\\kavi\\react_test_survey\\src\\sideBar.jsx",["50","51"],"import React, { Component } from 'react';\r\nimport Sidebar from \"./images/sidebar.jpg\"\r\n\r\nconst SideBar = () => {\r\nreturn (\r\n    <img src={Sidebar} />\r\n);\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\kavi\\react_test_survey\\src\\rightSideBar.jsx",[],"C:\\Users\\kavi\\react_test_survey\\src\\display.jsx",["52","53"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Display extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state=\"\";\r\n  }\r\n\r\n    render() {\r\n       let i;\r\n       let display = [];\r\n       let status;\r\n       \r\n      for(i=0; i< this.props.data.length; i++){\r\n\r\n        if(this.props.data[i].status == \"completed\") \r\n          status = <span style={{color:\"#991487\"}} >&#10004;</span>\r\n        else\r\n          status = <span style={{color:\"#991487\"}} >&#128259;</span>  \r\n\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth()+1; \r\n        var yyyy = today.getFullYear();\r\n\r\n        let date = dd +\".\"+mm+\".\"+yyyy;\r\n\r\n        let bgColor\r\n        switch(this.props.data[i].label){\r\n          case \"NEWFRAMEWORK\":\r\n            bgColor= \"#991487\";\r\n          break;\r\n\r\n          case \"EDUCATION\":\r\n            bgColor= \"#4657A7\";\r\n          break;\r\n\r\n          case \"PERSONAL\":\r\n            bgColor= \"#2495A7\";\r\n          break;\r\n        }\r\n\r\n        display[i] = <div className=\"display_row\"  >\r\n                        <table width=\"100%\">\r\n                          <tbody>\r\n                            <tr>\r\n                              <td width=\"3%\" >{status}</td>\r\n                              <td width=\"45%\"><span style={{ fontSize: \"15px\"}}> {this.props.data[i].title} </span></td>\r\n                              <td width=\"16%\"><span style={{ fontSize: \"11px\"}}> {this.props.data[i].category} </span></td>\r\n                              <td width=\"16%\"><span style={{ fontSize: \"11px\"}}> {date} </span></td>\r\n                              <td width=\"16%\">\r\n                                <span \r\n                                  className=\"label_display\" \r\n                                  style={{backgroundColor:bgColor}} > \r\n                                  {this.props.data[i].label} \r\n                                </span>\r\n                              </td>\r\n                              <td width=\"3%\">\r\n                                <input type=\"checkbox\" id={\"rowcheckid\"+ this.props.data[i].slno } className = \"row_check\"></input>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                    </div>;\r\n      }\r\n        return (\r\n        <div style={{backgroundColor: \"#f8f8f8\"}} >\r\n              {display}    \r\n          </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      data: state\r\n    }\r\n  }\r\n \r\nexport default connect(mapStateToProps,null)(Display);","C:\\Users\\kavi\\react_test_survey\\src\\topbar.jsx",["54"],"import React, { Component } from 'react';\r\nimport topBar from \"./images/topbar.jpg\"\r\n\r\nclass TopBar extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <img src={topBar} />\r\n         );\r\n    }\r\n}\r\n \r\nexport default TopBar;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":35,"column":59,"nodeType":"61","messageId":"62","endLine":35,"endColumn":61},{"ruleId":"59","severity":1,"message":"60","line":40,"column":88,"nodeType":"61","messageId":"62","endLine":40,"endColumn":90},{"ruleId":"63","severity":1,"message":"64","line":5,"column":16,"nodeType":"65","messageId":"66","endLine":5,"endColumn":17},{"ruleId":"63","severity":1,"message":"67","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":32},{"ruleId":"63","severity":1,"message":"68","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":6,"column":5,"nodeType":"71","endLine":6,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":17,"column":38,"nodeType":"61","messageId":"62","endLine":17,"endColumn":40},{"ruleId":"72","severity":1,"message":"73","line":30,"column":9,"nodeType":"74","messageId":"75","endLine":42,"endColumn":10},{"ruleId":"69","severity":1,"message":"70","line":8,"column":13,"nodeType":"71","endLine":8,"endColumn":33},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'i' is defined but never used.","Identifier","unusedVar","'formRedecer' is defined but never used.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]